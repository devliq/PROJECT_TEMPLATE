name: Vercel Deployment with Environment Variables

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel environment information
        run: vercel pull --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Set environment variables via API
        run: ./scripts/set-vercel-env.sh
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          ENVIRONMENT: ${{ github.event.inputs.environment || 'production' }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REDIS_URL: ${{ secrets.REDIS_URL }}

      - name: Build application
        run: npm run build

      - name: Deploy to Vercel
        id: deploy
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            DEPLOY_URL=$(vercel --yes --token ${{ secrets.VERCEL_TOKEN }})
          else
            DEPLOY_URL=$(vercel --prod --yes --token ${{ secrets.VERCEL_TOKEN }})
          fi
          echo "deploy_url=$DEPLOY_URL" >> $GITHUB_OUTPUT

      - name: Verify deployment
        run: |
          sleep 30
          curl -f ${{ steps.deploy.outputs.deploy_url }} || exit 1

      - name: Run smoke tests
        run: |
          npm run test:smoke ${{ steps.deploy.outputs.deploy_url }}

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed, attempting rollback..."
          vercel rollback --yes --token ${{ secrets.VERCEL_TOKEN }}

      - name: Notify on success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "🚀 Deployed to: ${{ steps.deploy.outputs.deploy_url }}"

      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          echo "🔄 Attempted rollback"
